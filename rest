const axios = require('axios');

const SSO_MIDDLEWARE = () => {
  const client_id = process.env.CLIENT_ID_SSO;
  const client_secret =  process.env.CLIENT_SECRET_SSO;;
  const authorization_url =  process.env.AUTHORIZATION_URL_SSO;;
  const token_url =  process.env.TOKEN_URL_SSO;
  const redirect_uri = 'https://am01-caw-web-devtest-001.azurewebsites.net/Data-scientist-new/Dashboard';

  return async (req, res, next) => {
    if (!req.session.access_token) {
      console.log("Session: Access token not found in the session.");

      // Check if the query parameters contain the authorization code
      const code = req.query.code;
      if (code) {
        // Exchange the code for an access token
        const tokenRequestBody = new URLSearchParams();
        tokenRequestBody.append('client_id', client_id);
        tokenRequestBody.append('scope', 'https://graph.microsoft.com/.default');
        tokenRequestBody.append('redirect_uri', redirect_uri);
        tokenRequestBody.append('grant_type', 'authorization_code');
        tokenRequestBody.append('client_secret', client_secret);
        tokenRequestBody.append('code', code);

        try {
          const tokenResponse = await axios.post(token_url, tokenRequestBody);

          if (tokenResponse.status === 200) {
            const tokenData = tokenResponse.data;
            const access_token = tokenData.access_token;

            // Store the access token in the session
            req.session.access_token = access_token;

            // Fetch user info using the access token
            try {
              const userInfoResponse = await axios.get('https://graph.microsoft.com/oidc/userinfo', {
                headers: {
                  'Authorization': `Bearer ${access_token}`,
                },
              });

              if (userInfoResponse.status === 200) {
                const userInfo = userInfoResponse.data;
                // Store user info in the session
                req.session.userInfo = userInfo;
              } else {
                console.error('Failed to obtain user info');
                res.status(500).send('Failed to obtain user info');
              }
            } catch (error) {
              console.error('Error while fetching user info:', error.message);
              res.status(500).json({ error: error.message });
            }

            next();
          } else {
            console.error('Failed to obtain access token');
            res.status(500).send('Failed to obtain access token');
          }
        } catch (error) {
          console.error('Error while exchanging the code for access token:', error.message);
          res.status(500).json({ error: error.message });
        }
      } else {
        console.log("Redirecting to the authorization provider...");
        const authUrl = `${authorization_url}?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=code&scope=https://graph.microsoft.com/.default&state=12345`;

        res.redirect(authUrl);
      }
    } else {
      console.log('Access token Session:', req.session.access_token);
      next();
    }
  };
};

module.exports = SSO_MIDDLEWARE;
